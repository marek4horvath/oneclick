# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    BASE_URL: '%env(BASE_URL)%'
    QRFY_API_KEY: '%env(QRFY_API_KEY)%'
    QRFY_DEFAULT_FOLDER_ID: '%env(QRFY_DEFAULT_FOLDER_ID)%'
    GOOGLE_GEO_API_KEY: '%env(GOOGLE_GEO_API_KEY)%'
    GOOGLE_GEO_API_URL: '%env(GOOGLE_GEO_API_URL)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    acme_api.event.jwt_created_listener:
        class: App\EventListener\JWTCreatedListener
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_created, method: onJWTCreated }

    App\EventListener\PasswordHasherListener:
        tags:
            - { name: 'doctrine.event_listener', event: 'prePersist' }
            - { name: 'doctrine.event_listener', event: 'preUpdate' }

    App\Serializer\UploadedFileDenormalizer:
        tags: [ 'serializer.denormalizer' ]

    App\StateProcessors\CompanyRegistrationProcessor:
        arguments:
            $entityManager: '@doctrine.orm.entity_manager'
            $denormalizer: '@serializer'

    App\Doctrine\CollectionFilter:
        tags:
            - { name: api_platform.doctrine.orm.query_extension.collection }

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
